1.

#include <stdio.h>

int main() {

   char str[1000], rev[1000];

   int i, j, len = 0;

   printf("Enter a string: ");

   scanf("%s", str);

   // Find the length of the string

   while (str[len] != '\0') {

      len++;

   }

   // Reverse the string

   for (i = len - 1, j = 0; i >= 0; i--, j++) {

      rev[j] = str[i];

   }

   rev[j] = '\0';

   printf("The reversed string is: %s\n", rev);

   return 0;

}

2.

#include <stdio.h>

int factorial(int n) {

    if (n == 0) {

        return 1;

    }

    else {

        return n * factorial(n-1);

    }

}

int main() {

    int num;

    printf("Enter a positive integer: ");

    scanf("%d", &num);

    printf("Factorial of %d is %d", num, factorial(num));

    return 0;

}

3. 

#include <stdio.h>

int main() {

   int i, j, rows;

   printf("Enter the number of rows: ");

   scanf("%d", &rows);

   for (i = 1; i <= rows; ++i) {

      for (j = 1; j <= i; ++j) {

         printf("* ");

      }

      printf("\n");

   }

   return 0;

}

4.

#include <stdio.h>

int main() {

   int i, j, rows;

   printf("Enter the number of rows: ");

   scanf("%d", &rows);

   for (i = 1; i <= rows; ++i) {

      for (j = 1; j <= i; ++j) {

         printf("%d ", j);

      }

      printf("\n");

   }

   return 0;

}

5.

#include <stdio.h>  

int main(void) {  

  int n;  

  printf("Enter the number of rows\n");  

  scanf("%d",&n);  

  int spaces=n-1;  

  int stars=1;  

  for(int i=1;i<=n;i++)  

  {  

    for(int j=1;j<=spaces;j++)  

    {  

      printf(" ");  

    }  

    for(int k=1;k<=stars;k++)  

    {  

      printf("*");  

    }  

    if(spaces>i)  

    {  

      spaces=spaces-1;  

      stars=stars+2;  

    }  

    if(spaces<i)  

    {  

      spaces=spaces+1;  

      stars=stars-2;  

    }  

    printf("\n");  

  }  

  return 0;}  

6. 

#include <stdio.h>

// Function to check if a number is composite

int isComposite(int n) {

    if (n <= 1) {

        return 0;

    }

    for (int i = 2; i <= n / 2; i++) {

        if (n % i == 0) {

            return 1;

        }

    }

    return 0;

}

int main() {

    int arr[] = {16, 18, 27, 16, 23, 21, 19};

    int size = sizeof(arr) / sizeof(arr[0]);

    int compositeCount = 0;

    // Loop through the array and check if each element is composite

    for (int i = 0; i < size; i++) {

        if (isComposite(arr[i])) {

            compositeCount++;

        }

    }

    printf("Number of Composite Numbers = %d", compositeCount);

    return 0;

}

7.

#include <stdio.h>

int main() {

    int arr[] = {16, -18, 27, -16, 23, -21, 19};

    int n = sizeof(arr) / sizeof(arr[0]);

    int count = 0;

    for (int i = 0; i < n; i++) {

        if (arr[i] < 0) {

            count++;

        }

    }

    printf("Number of negative numbers in Array elements = %d\n", count);

    return 0;

}

8.

#include <stdio.h>

#define MAX_SIZE 100

int main()

{

    int arr[MAX_SIZE];

    int i, n;

    

    printf("Enter the size of the array: ");

    scanf("%d", &n);

    

    printf("Enter %d elements in the array: ", n);

    for(i=0; i<n; i++)

    {

        scanf("%d", &arr[i]);

    }

    

    printf("Original array: ");

    for(i=0; i<n; i++)

    {

        printf("%d ", arr[i]);

    }

    

    printf("\nReversed array: ");

    for(i=n-1; i>=0; i--)

    {

        printf("%d ", arr[i]);

    }

    

    return 0;

}

9. 

#include <stdio.h>

int main() {

    int rows, cols;

    printf("Enter the number of rows and columns of the matrix:\n");

    scanf("%d%d", &rows, &cols);

    int matrix[rows][cols];

    printf("Enter the elements of the matrix:\n");

    for (int i = 0; i < rows; i++) {

        for (int j = 0; j < cols; j++) {

            scanf("%d", &matrix[i][j]);

        }

    }

    int transpose[cols][rows];

    for (int i = 0; i < rows; i++) {

        for (int j = 0; j < cols; j++) {

            transpose[j][i] = matrix[i][j];

        }

    }

    printf("The transpose of the matrix is:\n");

    for (int i = 0; i < cols; i++) {

        for (int j = 0; j < rows; j++) {

            printf("%d ", transpose[i][j]);

        }

        printf("\n");

    }

    return 0;

}

10.

#include<stdio.h>

int main()

{

    int arr[100], n, i, j, k;

    printf("Enter the size of array: ");

    scanf("%d", &n);

    printf("Enter the elements of the array: ");

    for(i=0;i<n;i++)

    {

        scanf("%d", &arr[i]);

    }

    for(i=0;i<n;i++)

    {

        for(j=i+1;j<n;)

        {

            if(arr[j]==arr[i])

            {

                for(k=j;k<n;k++)

                {

                    arr[k]=arr[k+1];

                }

                n--;

            }

            else

            {

                j++;

            }

        }

    }

    printf("The array after removing duplicates is: ");

    for(i=0;i<n;i++)

    {

        printf("%d ", arr[i]);

    }

    return 0;

}

